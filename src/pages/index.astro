---
import { Image } from "astro:assets";

import Layout from "@/layouts/InfoLayout.astro";
import Hero from "@/sections/about/Hero.astro";
import Tecnologies from "@/components/Technologies.astro";

const description =
  "Bienvenido a nuestra plataforma escolar, donde los estudiantes de mantenimiento y programación colaboran para ofrecerte productos únicos y de alta calidad. Descubre la creatividad y la innovación de nuestros futuros profesionales a través de artículos diseñados y fabricados con esmero. Apoya el talento estudiantil y explora nuestras ofertas para una experiencia excepcional. ¡Gracias por visitar y apoyar el esfuerzo de nuestros compañeros!";
---

<Layout title="CECyTEM" description={description}>
  <Hero />
  <Tecnologies />
  <main class="p-2 mx-auto max-w-screen-xl">
    <section
      class:list={[
        "section",
        "relative overflow-x-hidden rounded-2xl",
        "items-center lg:grid grid-cols-2",
        "py-8 px-4 gap-16 lg:px-6",
        "border border-black/15 dark:border-white/15",
        "bg-neutral-300/40 dark:bg-neutral-900",
        "bg-opacity-85 backdrop-blur-sm",
      ]}
    >
      <div
        aria-hidden="true"
        class:list={[
          "absolute z-10 left-0 top-[10%]",
          "h-[358px] w-[516px]",
          "rotate-45 lg:rotate-[-19deg]",
          "blur-3xl rounded-full",
          "opacity-10 lg:opacity-15 dark:opacity-5 dark:lg:opacity-10",
          "bg-gradient-to-r from-green-500 to-emerald-400",
          "dark:from-green-400 dark:to-yellow-200",
          "select-none pointer-events-none touch-none",
        ]}
      >
      </div>

      <div class="font-light text-neutral-700 sm:text-lg dark:text-neutral-300">
        <h2
          class="mb-4 text-4xl md:text-5xl text-pretty md:text-balance tracking-tight font-extrabold text-neutral-900 dark:text-white"
        >
          <span class="font-effect">Innovación</span> y <span
            class="font-effect">excelencia</span
          > al alcance de tu mano.
        </h2>
        <p class="mb-4">
          ¡Gracias por visitar nuestra página web! Aquí podrás conocer más sobre
          lo que hacemos y los productos que fabricamos.
        </p>
        <p>
          Estamos comprometidos a brindarte una experiencia excepcional desde el
          primer momento en que nos elijas. Estaremos a tu lado para asegurarnos
          de que disfrutes al máximo de nuestros productos.
        </p>
      </div>
      <div class="grid grid-cols-2 gap-4 mt-8">
        <Image
          class="w-full rounded-lg"
          src="/images/office-long-2.png"
          alt="People gathered around a table with laptops, collaborating on a project."
          loading="eager"
          width={592}
          height={822}
        />
        <Image
          class="mt-4 w-full lg:mt-10 rounded-lg"
          src="/images/office-long-1.png"
          alt="Office space with a desk and a lamp."
          loading="eager"
          width={592}
          height={822}
        />
      </div>
    </section>
  </main>
</Layout>

<style>
  @property --rotate-x {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
  }

  @property --rotate-y {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
  }

  .section {
    transform: perspective(1000px) rotateX(var(--rotate-x, 0deg))
      rotateY(var(--rotate-y, 0deg)) !important;
    transition:
      --rotate-x 150ms ease-out,
      --rotate-y 150ms ease-out;
    transform-style: preserve-3d;
    
    animation: scroll-title both linear;
    animation-timeline: scroll();
    animation-duration: 1ms;
    animation-range: entry 0% exit 10%;
  }
</style>

<script>
  import { $ } from "@/lib/dom-selector";
  document.addEventListener("astro:page-load", () => {
    const $element = $(".section");
    if (!$element) return;

    let w = $element?.clientWidth;
    let h = $element?.clientHeight;


    document.addEventListener("resize", () => {
      w = $element?.clientWidth;
      h = $element?.clientHeight;
    });

    const mouseMoveHandler = (x: number, y: number) => {
      if (!w || !h) return;

      const yRotation = ((x - w / 2) / w) * 40;
      const xRotation = ((y - h / 2) / h) * 40;

      $element.style.setProperty("--rotate-x", `${-xRotation}deg`);
      $element.style.setProperty("--rotate-y", `${yRotation}deg`);
    };

    const resetProperties = () => {
      $element.style.setProperty("--rotate-x", "0deg");
      $element.style.setProperty("--rotate-y", "0deg");
    };

    $element.addEventListener("mousemove", (e) => {
      const { layerX, layerY } = e;
      mouseMoveHandler(layerX, layerY);
    });
    $element.addEventListener("touchmove", (e) => {
      const touch = e.touches[0];
      const rect = $element.getBoundingClientRect();
      const touchX = touch.clientX - rect.left;
      const touchY = touch.clientY - rect.top;
      mouseMoveHandler(touchX, touchY);
    })

    $element.addEventListener("mouseout", resetProperties);
    $element.addEventListener("touchend", resetProperties);
  });
</script>
