---
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }>;

const { as: Tag, class: className, ...props } = Astro.props;
---

<Tag
  class:list={[
    "action",
    "flex px-6 py-1 mx-auto my-3",
    "text-xl min-w-fit w-24 h-14",
    "items-center justify-center font-bold",
    "transition-all text-center rounded-2xl",
    "text-neutral-900 dark:text-neutral-100",
    "hover:hue-rotate-30 active:brightness-95",
    className,
  ]}
  {...props}
>
  <span class="inline-block"><slot /></span>
</Tag>

<style>
  .action {
    --primary-light: #f1f1f1;
    --primary: #ededed;
    --primary-dark: #cbccca;
    --white: #e3e9d9;
    --greyLight-2: #d2e9d5;
    &:where(.dark, .dark *) {
      --primary-light: #1f1f1f;
      --primary: #1a1919;
      --primary-dark: #000000;
      --white: #111612;
      --greyLight-2: #09130b;
    }
    background: var(--primary);
    box-shadow:
      inset 0.2rem 0.2rem 1rem var(--primary-light),
      inset -0.2rem -0.2rem 1rem var(--primary-dark),
      0.3rem 0.3rem 0.6rem var(--greyLight-2),
      -0.2rem -0.2rem 0.5rem var(--white);
    &:active {
      box-shadow:
        inset 0.2rem 0.2rem 1rem var(--primary-dark),
        inset -0.2rem -0.2rem 1rem var(--primary-light),
        0.3rem 0.3rem 0.6rem var(--greyLight-2),
        -0.2rem -0.2rem 0.5rem var(--white);
    }
  }
</style>